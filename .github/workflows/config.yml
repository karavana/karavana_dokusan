name: Python package

on:
  push:
    branches:
      - master
    tags:
      - '[0-2].[0-9]+.[0-9]+*'
  pull_request:
    branches:
      - '**'


jobs:

  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-pip-

    - name: Cache pre-commit dependencies
      uses: actions/cache@v1
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-${{ hashFiles('**/.pre-commit-config.yaml') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-pre-commit-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox

    - name: Lint and Test with tox
      run: |
        tox -v

  publish:
    if: startsWith(github.event.ref, 'refs/tags')
    needs: [lint-and-test]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: "3.8"

    - name: Build and Publish package
      env:
        PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
        PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry build
        poetry publish -u $PYPI_USERNAME -p $PYPI_PASSWORD
